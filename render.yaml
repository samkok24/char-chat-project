# Render Blueprint for char-chat (Backend FastAPI + PostgreSQL + Redis + Frontend Vite)

databases:
  - name: charchat-db
    databaseName: char_chat
    user: char
    plan: free

services:
  # Redis (cache/queues)
  - type: keyvalue
    name: char-redis
    plan: free
    maxmemoryPolicy: allkeys-lru
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere

  # Backend API (FastAPI)
  - type: web
    name: char-backend
    runtime: python
    plan: free
    rootDir: backend-api
    buildCommand: pip install -r requirements.txt
    startCommand: uvicorn app.main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: PYTHON_VERSION
        value: 3.11.9
      # Security
      - key: JWT_SECRET_KEY
        sync: false
      # Database URL is injected from the managed PostgreSQL
      - key: DATABASE_URL
        fromDatabase:
          name: charchat-db
          property: connectionString
      # Managed Redis connection string
      - key: REDIS_URL
        fromService:
          name: char-redis
          type: keyvalue
          property: connectionString
      # Storage (R2 / S3 compatible). Fill the values before deploying.
      - key: STORAGE_BACKEND
        value: S3
      - key: R2_ENDPOINT_URL
        sync: false
      - key: R2_ACCESS_KEY_ID
        sync: false
      - key: R2_SECRET_ACCESS_KEY
        sync: false
      - key: R2_BUCKET
        sync: false
      - key: R2_PUBLIC_BASE_URL
        sync: false
      - key: R2_ADDRESSING_STYLE
        value: path
      # Optional: allow all origins in dev. For production, restrict properly.
      - key: ALLOW_ORIGIN_REGEX
        value: ".*"
      - key: FRONTEND_BASE_URL
        sync: false
      # At least one AI key must be set in production
      - key: GEMINI_API_KEY
        sync: false
      - key: CLAUDE_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
    # Optional: run a migration step right after each deploy
    # postDeployCommand: python -m app.scripts.precise_migration
    postDeployCommand: python postgres_migration.py
  # Frontend (Vite static site)
  - type: web
    name: char-frontend
    runtime: static
    rootDir: frontend/char-chat-frontend
    buildCommand: corepack enable && pnpm i --frozen-lockfile && pnpm build
    staticPublishPath: dist
    routes:
      - type: rewrite
        source: /*
        destination: /
    envVars:
      - key: NODE_VERSION
        value: 20.17.0
      - key: VITE_API_URL
        sync: false # Render 대시보드에서 백엔드 공개 URL을 입력하세요 (예: https://<backend>.onrender.com)

  # Realtime Chat Server (Socket.IO)
  - type: web
    name: char-socket
    runtime: node
    plan: free
    rootDir: chat-server
    buildCommand: npm install --omit=dev
    startCommand: node src/server.js
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: NODE_VERSION
        value: 20.17.0
      - key: PORT
        value: 3001
      - key: REDIS_URL
        fromService:
          name: char-redis
          type: keyvalue
          property: connectionString
      - key: BACKEND_API_URL
        sync: false # 예: https://char-backend.onrender.com
      - key: JWT_SECRET_KEY
        sync: false
      - key: GEMINI_API_KEY
        sync: false
      - key: CLAUDE_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: CORS_ORIGINS
        sync: false # 예: https://char-frontend.onrender.com


